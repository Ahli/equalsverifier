/*
 * Copyright 2013 Jan Ouwens
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package nl.jqno.equalsverifier.coverage;

import nl.jqno.equalsverifier.testhelpers.points.Color;

public class LombokCanEqualPointContainer {
	/**
	 * equals and hashCode generated by Project Lombok 0.12, using delombok.
	 * 
	 * Original class:
	 * 
	 * @EqualsAndHashCode
	 * public static class LombokCanEqualPoint {
	 *     private final int x;
	 *     private final int y;
	 * 
	 *     public LombokCanEqualPoint(int x, int y) {
	 *         this.x = x;
	 *         this.y = y;
	 *     }
	 * }
	 */
	public static class LombokCanEqualPoint {
		private final int x;
		private final int y;
		
		public LombokCanEqualPoint(int x, int y) {
			
			this.x = x;
			this.y = y;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof LombokCanEqualPointContainer.LombokCanEqualPoint)) return false;
			final LombokCanEqualPoint other = (LombokCanEqualPoint)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			if (this.x != other.x) return false;
			if (this.y != other.y) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		public boolean canEqual(final java.lang.Object other) {
			return other instanceof LombokCanEqualPointContainer.LombokCanEqualPoint;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public int hashCode() {
			final int PRIME = 31;
			int result = 1;
			result = result * PRIME + this.x;
			result = result * PRIME + this.y;
			return result;
		}
	}
	
	/**
	 * equals and hashCode generated by Project Lombok 0.12, using delombok.
	 * 
	 * Original class:
	 * 
	 * @EqualsAndHashCode(callSuper=true)
	 * public static final class LombokCanEqualColorPoint extends LombokCanEqualPoint {
	 *     private final Color color;
	 * 
	 *     public LombokCanEqualColorPoint(int x, int y, Color color) {
	 *         super(x, y);
	 *         this.color = color;
	 *     }
	 * }
	 */
	public static final class LombokCanEqualColorPoint extends LombokCanEqualPoint {
		private final Color color;
		
		public LombokCanEqualColorPoint(int x, int y, Color color) {
			super(x, y);
			this.color = color;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof LombokCanEqualPointContainer.LombokCanEqualColorPoint)) return false;
			final LombokCanEqualColorPoint other = (LombokCanEqualColorPoint)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			if (!super.equals(o)) return false;
			final java.lang.Object this$color = this.color;
			final java.lang.Object other$color = other.color;
			if (this$color == null ? other$color != null : !this$color.equals(other$color)) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		public boolean canEqual(final java.lang.Object other) {
			return other instanceof LombokCanEqualPointContainer.LombokCanEqualColorPoint;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public int hashCode() {
			final int PRIME = 31;
			int result = 1;
			result = result * PRIME + super.hashCode();
			final java.lang.Object $color = this.color;
			result = result * PRIME + ($color == null ? 0 : $color.hashCode());
			return result;
		}
	}
}
